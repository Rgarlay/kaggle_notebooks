{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":94635,"databundleVersionId":13121456,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\npd.set_option('display.max_columns', None)\npd.set_option('display.max_colwidth',None)\nimport re\n## Now tokenization\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom keras.utils import pad_sequences\nimport nltk\nnltk.download('stopwords')\nfrom nltk.corpus import stopwords\nfrom nltk.stem import WordNetLemmatizer\nimport spacy\nfrom sklearn.model_selection import train_test_split\nfrom tensorflow.keras.layers import Dense, Embedding, Concatenate, Input, LSTM\nfrom tensorflow.keras.models import Model\nfrom tensorflow.keras.metrics import AUC\nfrom tensorflow.keras.layers import SimpleRNN, Dense,Reshape, Dropout\nfrom tensorflow.keras.optimizers import Adam\nfrom tensorflow.keras.layers import Attention, Flatten, GlobalAveragePooling1D,BatchNormalization, LayerNormalization, Bidirectional, MultiHeadAttention, Add\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:52:18.232688Z","iopub.execute_input":"2025-08-03T06:52:18.233018Z","iopub.status.idle":"2025-08-03T06:52:35.078760Z","shell.execute_reply.started":"2025-08-03T06:52:18.232991Z","shell.execute_reply":"2025-08-03T06:52:35.078000Z"}},"outputs":[{"name":"stderr","text":"2025-08-03 06:52:19.781720: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1754203939.991152      36 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1754203940.046075      36 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n","output_type":"stream"},{"name":"stdout","text":"/kaggle/input/jigsaw-agile-community-rules/sample_submission.csv\n/kaggle/input/jigsaw-agile-community-rules/train.csv\n/kaggle/input/jigsaw-agile-community-rules/test.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"nlp = spacy.load(\"en_core_web_sm\")\nspacy_stopwords = nlp.Defaults.stop_words\nnltk_stopwords = set(stopwords.words('english'))\ncombined_stopwords = spacy_stopwords.union(nltk_stopwords)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:52:35.079884Z","iopub.execute_input":"2025-08-03T06:52:35.080509Z","iopub.status.idle":"2025-08-03T06:52:35.774798Z","shell.execute_reply.started":"2025-08-03T06:52:35.080485Z","shell.execute_reply":"2025-08-03T06:52:35.774232Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"df_train = pd.read_csv('/kaggle/input/jigsaw-agile-community-rules/train.csv')\ndf_test = pd.read_csv('/kaggle/input/jigsaw-agile-community-rules/test.csv')\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:26.598283Z","iopub.execute_input":"2025-08-03T06:58:26.598862Z","iopub.status.idle":"2025-08-03T06:58:26.635642Z","shell.execute_reply.started":"2025-08-03T06:58:26.598831Z","shell.execute_reply":"2025-08-03T06:58:26.634983Z"}},"outputs":[],"execution_count":18},{"cell_type":"markdown","source":"### Since testing data has only (10,8) shape. We will report training from MY own training class, then train ALL the training data on that, and then Predict the testing dataframe on that. So code pipelines should be written. ","metadata":{}},{"cell_type":"markdown","source":"## We need to match row_id with Probability of being in one class.","metadata":{}},{"cell_type":"code","source":"def dataset_basics(df):\n    print(f'Number of empty rows \\n {df.isna().sum()} \\n')\n    print(f'Number of duplicate rows {df.duplicated().sum()} \\n')\n    print(f'\\n Dtypes and other info \\n {df.info()} \\n')\n    print(f'Shape of the dataframe {df.shape}')\n\ndataset_basics(df_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:33.966168Z","iopub.execute_input":"2025-08-03T06:58:33.966455Z","iopub.status.idle":"2025-08-03T06:58:33.983154Z","shell.execute_reply.started":"2025-08-03T06:58:33.966434Z","shell.execute_reply":"2025-08-03T06:58:33.982195Z"}},"outputs":[{"name":"stdout","text":"Number of empty rows \n row_id                0\nbody                  0\nrule                  0\nsubreddit             0\npositive_example_1    0\npositive_example_2    0\nnegative_example_1    0\nnegative_example_2    0\nrule_violation        0\ndtype: int64 \n\nNumber of duplicate rows 0 \n\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 2029 entries, 0 to 2028\nData columns (total 9 columns):\n #   Column              Non-Null Count  Dtype \n---  ------              --------------  ----- \n 0   row_id              2029 non-null   int64 \n 1   body                2029 non-null   object\n 2   rule                2029 non-null   object\n 3   subreddit           2029 non-null   object\n 4   positive_example_1  2029 non-null   object\n 5   positive_example_2  2029 non-null   object\n 6   negative_example_1  2029 non-null   object\n 7   negative_example_2  2029 non-null   object\n 8   rule_violation      2029 non-null   int64 \ndtypes: int64(2), object(7)\nmemory usage: 142.8+ KB\n\n Dtypes and other info \n None \n\nShape of the dataframe (2029, 9)\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"df_train['subreddit'].nunique()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:34.155332Z","iopub.execute_input":"2025-08-03T06:58:34.155655Z","iopub.status.idle":"2025-08-03T06:58:34.161349Z","shell.execute_reply.started":"2025-08-03T06:58:34.155634Z","shell.execute_reply":"2025-08-03T06:58:34.160413Z"}},"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"100"},"metadata":{}}],"execution_count":25},{"cell_type":"markdown","source":"## There are 100 unique subreddits.","metadata":{}},{"cell_type":"code","source":"df_train['rule_violation'].value_counts()/df_train.shape[0] * 100","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:34.482233Z","iopub.execute_input":"2025-08-03T06:58:34.482551Z","iopub.status.idle":"2025-08-03T06:58:34.489614Z","shell.execute_reply.started":"2025-08-03T06:58:34.482527Z","shell.execute_reply":"2025-08-03T06:58:34.488661Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"rule_violation\n1    50.813208\n0    49.186792\nName: count, dtype: float64"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"df_train.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:34.658155Z","iopub.execute_input":"2025-08-03T06:58:34.658893Z","iopub.status.idle":"2025-08-03T06:58:34.668800Z","shell.execute_reply.started":"2025-08-03T06:58:34.658867Z","shell.execute_reply":"2025-08-03T06:58:34.667949Z"}},"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"   row_id  \\\n0       0   \n1       1   \n2       2   \n3       3   \n4       4   \n\n                                                                                                                                                                                                                                                                                                                             body  \\\n0                                                                                                                                                                                                                                                                     Banks don't want you to know this! Click here to know more!   \n1                                                                                                                                                                                                                                     SD Stream [ ENG Link 1] (http://www.sportsstreams247.com/astra-giurgiu-vs-fc-austria-wien/)   \n2                                                                                                                                                                                                                                                                       Lol. Try appealing the ban and say you won't do it again.   \n3                                                                                                                                                                                                                                                     she will come your home open her legs with  and  you http://sh.ors.it/PALI2   \n4  code free tyrande --->>> [Imgur](http://i.imgur.com/KlvssCl.png)\\n\\nfor you and your friend 2 codes for 4 dollars https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=UN4E27AG7BWKS\\n\\n2$... buy one directly from here: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=VP3S5HQRE7T7E\\n   \n\n                                                                                                      rule  \\\n0  No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.   \n1  No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.   \n2                                                   No legal advice: Do not offer or request legal advice.   \n3  No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.   \n4  No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.   \n\n       subreddit  \\\n0     Futurology   \n1  soccerstreams   \n2   pcmasterrace   \n3            sex   \n4    hearthstone   \n\n                                                                                                                                                                                                                                                                                                                         positive_example_1  \\\n0                                                                                                             If you could tell your younger self something different about sex, what would that be?\\n\\ni AM IN A CONTEST TO WIN FUNDING FOR MY SEX POSITIVE FILM: VOTE HERE:\\n\\nhttp://sheknows.offerpop.com/campaign/813112/entry/v144417   \n1                                                                                                                                                                                                                                                            [I wanna kiss you all over! Stunning!](http://www.oilflush.life/2017/01/26/6/)   \n2                                                                                                                                                          Don't break up with him or call the cops.  If you are willing to get beat up by him to stay with him, he is obviously a real winner and you know it, so you shouldn't leave him.   \n3                                                                                                                                                                                                                                                                    Selling Tyrande codes for 3€ to paypal. PM. \\nhttp://imgur.com/a/IMARW   \n4   wow!! amazing reminds me of the old days.Well Do you desire a great spell caster and a herbal doctor to help you solve any problem you are going through? i am a proud testimony of what king favour solution temple has offered me. Contact him now at kingfavoursolutiontemple@yahoo.com You will be the next to testify.bye everyone   \n\n                                                                                                                                                             positive_example_2  \\\n0                                                                                                        hunt for lady for jack off in neighbourhood http://url.inmusi.com/gakq   \n1  LOLGA.COM is One of the First Professional Online Gold sites. By Now, As A Game Gold Seller, we've over more than 5 yrs Of Experience And Can Pass That On To Our Customers.   \n2                                            It'll be dismissed: https://en.wikipedia.org/wiki/New_York_Times_Co._v._Sullivan\\n\\nThe first amendment law here is SUPER settled.   \n3                                                                                  tight pussy watch for your cock get her at this point http://macanasmagazine.com/yourls/hnof   \n4                                                                                                                           seek for lady for sex in around http://p77.pl/12yb9   \n\n                                                                                                                                                                                                                                                                                                                                                     negative_example_1  \\\n0  Watch Golden Globe Awards 2017 Live Online in HD Coverage without ADS (VIP STREAMS)\\n=\\n\\nHD STREAM QUALITY >>> [WATCH LINK1](http://forum.submitexpress.com/viewtopic.php?f=9&t=215858)\\n=\\n\\nHD BROADCASTING QUALITY >>> [WATCH LINK1](http://forum.submitexpress.com/viewtopic.php?f=9&t=215858)\\n=\\n\\nMobile Compatibility: YES\\n=\\n\\nNO ADS | NO ADS | ADS\\n=\\n   \n1                                                                                                                                              #Rapper \\n🚨Straight Outta Cross Keys SC 🚨YouTube Search Beanie 864 Click Link BELOW To Hear Hit Single\\n  \"Ah Man\" \\n Beanie 864 FEAT King Kota \\n (King Kota Is Only 15!) Lit 🌡🔥👍💵💯Fr Fr \\nhttps://youtu.be/tLqbV1Jmt5Y   \n2                                                                                                                                                                                                                                                      Where is there a site that still works where you can jump the GPS. Is there a FAQ to do this with iPhone or Mac?   \n3                                                                                                                                                                                                                                                                                              NSFW(obviously) http://spankbang.com/iy3u/video/marica+hase+mirrors+edge   \n4                                                                                                                                                                                                                                                                           must be watch movie https://sites.google.com/site/greatescape1963xx/-jagten-2012-full-movie   \n\n                                                                                                                                                                                                                                                                                                                                                                                                 negative_example_2  \\\n0                                                                                                                                                                                                                                                                                                         DOUBLE CEE x BANDS EPPS - \"BIRDS\"\\n\\nDOWNLOAD/STREAM:\\n\\nhttp://music.theblacksmithed.com/download/birds/   \n1  [15 Amazing Hidden Features Of Google Search You Probably Don’t Know](http://www.madpeoples.com/2017/01/02  No one would argue the fact that Google is one of the most useful sihttp://www.madpeoples.com/2016/12/31/15-amazing-hidden-features-of-google-search-you-probably-dont-know/tes on the Internet. Unfortunately, most people only use about...?utm_source=reddit&utm_campaign=samreen&utm_medium=cpc)   \n2                                                                                                                                                                                                                                                       Because this statement of his is true. It isn't freedom of the press, it's libel. And because of this, your post serves as a promotion for Trump. Reported.   \n3                                                                                                                                                                                                                                                                                                                                           Good News ::Download WhatsApp 2.16.230 APK for Android – Latest Version   \n4                                                                                                                                                                                                                                                                                                        We're streaming Pokemon Veitnamese Crystal RIGHT NOW, come watch https://www.twitch.tv/adandyguyinspace55.   \n\n   rule_violation  \n0               0  \n1               0  \n2               1  \n3               1  \n4               1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>row_id</th>\n      <th>body</th>\n      <th>rule</th>\n      <th>subreddit</th>\n      <th>positive_example_1</th>\n      <th>positive_example_2</th>\n      <th>negative_example_1</th>\n      <th>negative_example_2</th>\n      <th>rule_violation</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>Banks don't want you to know this! Click here to know more!</td>\n      <td>No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.</td>\n      <td>Futurology</td>\n      <td>If you could tell your younger self something different about sex, what would that be?\\n\\ni AM IN A CONTEST TO WIN FUNDING FOR MY SEX POSITIVE FILM: VOTE HERE:\\n\\nhttp://sheknows.offerpop.com/campaign/813112/entry/v144417</td>\n      <td>hunt for lady for jack off in neighbourhood http://url.inmusi.com/gakq</td>\n      <td>Watch Golden Globe Awards 2017 Live Online in HD Coverage without ADS (VIP STREAMS)\\n=\\n\\nHD STREAM QUALITY &gt;&gt;&gt; [WATCH LINK1](http://forum.submitexpress.com/viewtopic.php?f=9&amp;t=215858)\\n=\\n\\nHD BROADCASTING QUALITY &gt;&gt;&gt; [WATCH LINK1](http://forum.submitexpress.com/viewtopic.php?f=9&amp;t=215858)\\n=\\n\\nMobile Compatibility: YES\\n=\\n\\nNO ADS | NO ADS | ADS\\n=\\n</td>\n      <td>DOUBLE CEE x BANDS EPPS - \"BIRDS\"\\n\\nDOWNLOAD/STREAM:\\n\\nhttp://music.theblacksmithed.com/download/birds/</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>SD Stream [ ENG Link 1] (http://www.sportsstreams247.com/astra-giurgiu-vs-fc-austria-wien/)</td>\n      <td>No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.</td>\n      <td>soccerstreams</td>\n      <td>[I wanna kiss you all over! Stunning!](http://www.oilflush.life/2017/01/26/6/)</td>\n      <td>LOLGA.COM is One of the First Professional Online Gold sites. By Now, As A Game Gold Seller, we've over more than 5 yrs Of Experience And Can Pass That On To Our Customers.</td>\n      <td>#Rapper \\n🚨Straight Outta Cross Keys SC 🚨YouTube Search Beanie 864 Click Link BELOW To Hear Hit Single\\n  \"Ah Man\" \\n Beanie 864 FEAT King Kota \\n (King Kota Is Only 15!) Lit 🌡🔥👍💵💯Fr Fr \\nhttps://youtu.be/tLqbV1Jmt5Y</td>\n      <td>[15 Amazing Hidden Features Of Google Search You Probably Don’t Know](http://www.madpeoples.com/2017/01/02  No one would argue the fact that Google is one of the most useful sihttp://www.madpeoples.com/2016/12/31/15-amazing-hidden-features-of-google-search-you-probably-dont-know/tes on the Internet. Unfortunately, most people only use about...?utm_source=reddit&amp;utm_campaign=samreen&amp;utm_medium=cpc)</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>Lol. Try appealing the ban and say you won't do it again.</td>\n      <td>No legal advice: Do not offer or request legal advice.</td>\n      <td>pcmasterrace</td>\n      <td>Don't break up with him or call the cops.  If you are willing to get beat up by him to stay with him, he is obviously a real winner and you know it, so you shouldn't leave him.</td>\n      <td>It'll be dismissed: https://en.wikipedia.org/wiki/New_York_Times_Co._v._Sullivan\\n\\nThe first amendment law here is SUPER settled.</td>\n      <td>Where is there a site that still works where you can jump the GPS. Is there a FAQ to do this with iPhone or Mac?</td>\n      <td>Because this statement of his is true. It isn't freedom of the press, it's libel. And because of this, your post serves as a promotion for Trump. Reported.</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>she will come your home open her legs with  and  you http://sh.ors.it/PALI2</td>\n      <td>No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.</td>\n      <td>sex</td>\n      <td>Selling Tyrande codes for 3€ to paypal. PM. \\nhttp://imgur.com/a/IMARW</td>\n      <td>tight pussy watch for your cock get her at this point http://macanasmagazine.com/yourls/hnof</td>\n      <td>NSFW(obviously) http://spankbang.com/iy3u/video/marica+hase+mirrors+edge</td>\n      <td>Good News ::Download WhatsApp 2.16.230 APK for Android – Latest Version</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>code free tyrande ---&gt;&gt;&gt; [Imgur](http://i.imgur.com/KlvssCl.png)\\n\\nfor you and your friend 2 codes for 4 dollars https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=UN4E27AG7BWKS\\n\\n2$... buy one directly from here: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=VP3S5HQRE7T7E\\n</td>\n      <td>No Advertising: Spam, referral links, unsolicited advertising, and promotional content are not allowed.</td>\n      <td>hearthstone</td>\n      <td>wow!! amazing reminds me of the old days.Well Do you desire a great spell caster and a herbal doctor to help you solve any problem you are going through? i am a proud testimony of what king favour solution temple has offered me. Contact him now at kingfavoursolutiontemple@yahoo.com You will be the next to testify.bye everyone</td>\n      <td>seek for lady for sex in around http://p77.pl/12yb9</td>\n      <td>must be watch movie https://sites.google.com/site/greatescape1963xx/-jagten-2012-full-movie</td>\n      <td>We're streaming Pokemon Veitnamese Crystal RIGHT NOW, come watch https://www.twitch.tv/adandyguyinspace55.</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":27},{"cell_type":"markdown","source":"## Rule violated vs obeyed ratio is almost 1 to 1.\n\n## Let's prepare the Rules first.","metadata":{}},{"cell_type":"code","source":"split_df = df_train['rule'].str.split(',', expand=True)\nsplit_df.fillna('0',inplace=True)\nsplit_df.columns = ['rule 1','rule 2','rule 3','rule 4']\nsplit_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:35.802067Z","iopub.execute_input":"2025-08-03T06:58:35.802352Z","iopub.status.idle":"2025-08-03T06:58:35.817309Z","shell.execute_reply.started":"2025-08-03T06:58:35.802333Z","shell.execute_reply":"2025-08-03T06:58:35.816688Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"                                                   rule 1           rule 2  \\\n0                                    No Advertising: Spam   referral links   \n1                                    No Advertising: Spam   referral links   \n2  No legal advice: Do not offer or request legal advice.                0   \n3                                    No Advertising: Spam   referral links   \n4                                    No Advertising: Spam   referral links   \n\n                     rule 3                                     rule 4  \n0   unsolicited advertising   and promotional content are not allowed.  \n1   unsolicited advertising   and promotional content are not allowed.  \n2                         0                                          0  \n3   unsolicited advertising   and promotional content are not allowed.  \n4   unsolicited advertising   and promotional content are not allowed.  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>rule 1</th>\n      <th>rule 2</th>\n      <th>rule 3</th>\n      <th>rule 4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>No Advertising: Spam</td>\n      <td>referral links</td>\n      <td>unsolicited advertising</td>\n      <td>and promotional content are not allowed.</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>No Advertising: Spam</td>\n      <td>referral links</td>\n      <td>unsolicited advertising</td>\n      <td>and promotional content are not allowed.</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>No legal advice: Do not offer or request legal advice.</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>No Advertising: Spam</td>\n      <td>referral links</td>\n      <td>unsolicited advertising</td>\n      <td>and promotional content are not allowed.</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>No Advertising: Spam</td>\n      <td>referral links</td>\n      <td>unsolicited advertising</td>\n      <td>and promotional content are not allowed.</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"## Allowed is 1 and forbidden is 0 (Referral links)\nsplit_df['rule 2'] = split_df['rule 2'].apply(lambda x : 1 if 'referral links' in str(x).lower() else 0)\nsplit_df = split_df.rename(columns = {'rule 2':'referral link allowed'})\n\n\n## Allowed is 1 and not allowed is 0. (Legal Advices)\nsplit_df['legal_advice_allowed'] = split_df['rule 1'].apply(lambda x: 0 if 'legal' in str(x).lower() else 1)\n\n\n## Allowed is 1 and not allowed is 0. (promotions) \nsplit_df['rule 4'] = split_df['rule 4'].apply(lambda x: 0 if 'promotional' in str(x).lower() else 1)\nsplit_df = split_df.rename(columns = {'rule 4':'Promotions allowed'})\n\n\n## Allowed is 1 and not allowed is 0. (Advertising) \nsplit_df['rule 3'] = split_df['rule 3'].apply(lambda x: 0 if 'advertising' in str(x).lower() else 1)\nsplit_df = split_df.rename(columns = {'rule 3':'Advertising allowed'})\n\n\n## Allowed is 1 and not allowed is 0. (Spam) \n## Spam 1 doesn't mean that it's allowed. It means that it's not relevant. \n\n## IN following lines, we split dataframe from original to deal with spam part.\nsplit_df_1 = split_df['rule 1'].str.split(':',expand=True)\nsplit_df = split_df.drop(columns = ['rule 1'])\n\nsplit_df_1.columns = ['Advert','spam']\nsplit_df_1 = split_df_1.drop(columns = ['Advert'])\n\nsplit_df_1['spam allowed'] = split_df_1['spam'].apply(lambda x: 0 if 'spam' in str(x).lower() else 1)\nsplit_df['spam allowed'] = split_df_1['spam allowed']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:35.986325Z","iopub.execute_input":"2025-08-03T06:58:35.987048Z","iopub.status.idle":"2025-08-03T06:58:36.006138Z","shell.execute_reply.started":"2025-08-03T06:58:35.987021Z","shell.execute_reply":"2025-08-03T06:58:36.005320Z"}},"outputs":[],"execution_count":29},{"cell_type":"markdown","source":"### Both Legal advice and Spam are mututally exclusive. In model, remember to specify it.","metadata":{}},{"cell_type":"code","source":"split_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:41.063993Z","iopub.execute_input":"2025-08-03T06:58:41.064283Z","iopub.status.idle":"2025-08-03T06:58:41.072325Z","shell.execute_reply.started":"2025-08-03T06:58:41.064257Z","shell.execute_reply":"2025-08-03T06:58:41.071519Z"}},"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"   referral link allowed  Advertising allowed  Promotions allowed  \\\n0                      1                    0                   0   \n1                      1                    0                   0   \n2                      0                    1                   1   \n3                      1                    0                   0   \n4                      1                    0                   0   \n\n   legal_advice_allowed  spam allowed  \n0                     1             0  \n1                     1             0  \n2                     0             1  \n3                     1             0  \n4                     1             0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>referral link allowed</th>\n      <th>Advertising allowed</th>\n      <th>Promotions allowed</th>\n      <th>legal_advice_allowed</th>\n      <th>spam allowed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":30},{"cell_type":"code","source":"df = df_train.copy()\n\nfor i in split_df.columns:\n    df[i] = split_df[i]\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:42.151889Z","iopub.execute_input":"2025-08-03T06:58:42.152530Z","iopub.status.idle":"2025-08-03T06:58:42.158435Z","shell.execute_reply.started":"2025-08-03T06:58:42.152508Z","shell.execute_reply":"2025-08-03T06:58:42.157596Z"}},"outputs":[],"execution_count":31},{"cell_type":"markdown","source":"## Rules are preapred. \n\n## Next we work with examples.\n\n## So we have examples of data that violate and those who do not voilate the rule. We can take them in seperate datasets, add target values to them. Concatinate them to original dataset and then using all of that, train our model.\n\n## Let's seperate in the following order\n* ### Original: - df_original \n* ### 1st +ve: - df_p1 \n* ### 2nd +ve: - df_p2 \n* ### 1st -ve: - df_n1 \n* ### 2nd -ve: - df_n2\n\n## Seems all fine.","metadata":{}},{"cell_type":"code","source":"df_original = df[['body', 'rule_violation','referral link allowed', 'Advertising allowed',\n       'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\n\ndf_p1 = df[['positive_example_1','rule_violation','referral link allowed', 'Advertising allowed',\n       'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\ndf_p1.loc[:,'rule_violation'] = 0\ndf_p1 = df_p1.rename(columns = {'positive_example_1':'body'})\n\ndf_p2 = df[['positive_example_2','rule_violation','referral link allowed', 'Advertising allowed',\n       'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\ndf_p2.loc[:,'rule_violation'] = 0\ndf_p2 = df_p2.rename(columns = {'positive_example_2':'body'})\n\ndf_n1 = df[['negative_example_1','rule_violation','referral link allowed', 'Advertising allowed',\n       'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\ndf_n1.loc[:,'rule_violation'] = 1\ndf_n1 = df_n1.rename(columns = {'negative_example_1':'body'})\n\ndf_n2 = df[['negative_example_2','rule_violation','referral link allowed', 'Advertising allowed',\n       'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\ndf_n2.loc[:,'rule_violation'] = 1\ndf_n2 = df_n2.rename(columns = {'negative_example_2':'body'})","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:42.548508Z","iopub.execute_input":"2025-08-03T06:58:42.549227Z","iopub.status.idle":"2025-08-03T06:58:42.562406Z","shell.execute_reply.started":"2025-08-03T06:58:42.549200Z","shell.execute_reply":"2025-08-03T06:58:42.561861Z"}},"outputs":[],"execution_count":32},{"cell_type":"code","source":"df_total = pd.concat([df_original,df_p1,df_p2,df_n1,df_n2], axis = 0,ignore_index=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:44.028048Z","iopub.execute_input":"2025-08-03T06:58:44.028363Z","iopub.status.idle":"2025-08-03T06:58:44.033824Z","shell.execute_reply.started":"2025-08-03T06:58:44.028342Z","shell.execute_reply":"2025-08-03T06:58:44.033211Z"}},"outputs":[],"execution_count":33},{"cell_type":"markdown","source":"## Ok, now let's strip comment content and sophisticate it.\n\n### WIll text data have anything to do with numbers. I don't think even if we exclude them, there will be much impact. \n### There are HTML tags as well.\n### So there are links. short advirtisements in brackets. ","metadata":{}},{"cell_type":"code","source":"text1 = df_total['body'].to_list()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:45.144146Z","iopub.execute_input":"2025-08-03T06:58:45.144446Z","iopub.status.idle":"2025-08-03T06:58:45.148674Z","shell.execute_reply.started":"2025-08-03T06:58:45.144424Z","shell.execute_reply":"2025-08-03T06:58:45.147765Z"}},"outputs":[],"execution_count":34},{"cell_type":"code","source":"df_total.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:49.400297Z","iopub.execute_input":"2025-08-03T06:58:49.400591Z","iopub.status.idle":"2025-08-03T06:58:49.409566Z","shell.execute_reply.started":"2025-08-03T06:58:49.400568Z","shell.execute_reply":"2025-08-03T06:58:49.408894Z"}},"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"                                                                                                                                                                                                                                                                                                                             body  \\\n0                                                                                                                                                                                                                                                                     Banks don't want you to know this! Click here to know more!   \n1                                                                                                                                                                                                                                     SD Stream [ ENG Link 1] (http://www.sportsstreams247.com/astra-giurgiu-vs-fc-austria-wien/)   \n2                                                                                                                                                                                                                                                                       Lol. Try appealing the ban and say you won't do it again.   \n3                                                                                                                                                                                                                                                     she will come your home open her legs with  and  you http://sh.ors.it/PALI2   \n4  code free tyrande --->>> [Imgur](http://i.imgur.com/KlvssCl.png)\\n\\nfor you and your friend 2 codes for 4 dollars https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=UN4E27AG7BWKS\\n\\n2$... buy one directly from here: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=VP3S5HQRE7T7E\\n   \n\n   rule_violation  referral link allowed  Advertising allowed  \\\n0               0                      1                    0   \n1               0                      1                    0   \n2               1                      0                    1   \n3               1                      1                    0   \n4               1                      1                    0   \n\n   Promotions allowed  legal_advice_allowed  spam allowed  \n0                   0                     1             0  \n1                   0                     1             0  \n2                   1                     0             1  \n3                   0                     1             0  \n4                   0                     1             0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>body</th>\n      <th>rule_violation</th>\n      <th>referral link allowed</th>\n      <th>Advertising allowed</th>\n      <th>Promotions allowed</th>\n      <th>legal_advice_allowed</th>\n      <th>spam allowed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Banks don't want you to know this! Click here to know more!</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>SD Stream [ ENG Link 1] (http://www.sportsstreams247.com/astra-giurgiu-vs-fc-austria-wien/)</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Lol. Try appealing the ban and say you won't do it again.</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>she will come your home open her legs with  and  you http://sh.ors.it/PALI2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>code free tyrande ---&gt;&gt;&gt; [Imgur](http://i.imgur.com/KlvssCl.png)\\n\\nfor you and your friend 2 codes for 4 dollars https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=UN4E27AG7BWKS\\n\\n2$... buy one directly from here: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=VP3S5HQRE7T7E\\n</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"def remove_urls(text):\n    pattern = re.compile('https?:\\/\\/\\S+|www\\.\\S+|Https?:\\/\\/\\S+|\\S+\\.com\\S+|\\S+\\.com|\\[.*?\\]|\\S+ \\. com.*')\n    for i in range(len(text)):\n        text[i] = pattern.sub(r'',text[i])\n    return text\n\ntext1 = remove_urls(text1)\n\n##Can be modified\n\n### Removing HTML tags\ndef remove_html(text):\n    pattern = re.compile('<.*?>')\n    for i in range(len(text)):\n        text[i] = pattern.sub(r'',text[i])\n    return text\n\ntext1 = remove_html(text1)\n\n## Works perfectly\n\n\n### Removing Emails and hashtags\n\ndef remove_mail_hashtag(text):\n    pattern = re.compile('#\\S+|@\\S+|\\S+\\@\\S+|\\S+@')\n    for i in range(len(text)):\n        text[i] = pattern.sub(r'',text[i])\n    return text\n\ntext1 = remove_mail_hashtag(text1)\n\n#Works perfectly\n\n### Removing username and subreddit mentions\n\ndef remove_username_subreddit(text):\n    pattern = re.compile('u\\/\\S+|r\\/\\S+')\n    for i in range(len(text)):\n        text[i] = pattern.sub(r'',text[i])\n    return text\n\ntext1 = remove_username_subreddit(text1)\n\n## Works perfectly\n\n### Removing emojis and more alike.\n\ndef remove_emojis(text):\n    pattern = re.compile(\"[\"\n                           u\"\\U0001F600-\\U0001F64F\"  # emoticons\n                           u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n                           u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n                           u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           u\"\\U00002702-\\U000027B0\"\n                           u\"\\U000024C2-\\U0001F251\"\n                           \"]+\", flags=re.UNICODE)\n    for i in range(len(text)):\n        text[i] = pattern.sub(r'',text[i])\n    return text\n\ntext1 = remove_emojis(text1)\n\n##Works perfectly\n\n### Removing Numbers & \\n spaces\n\ndef remove_numbers(text):\n    pattern = re.compile('\\d|\\\\n')\n    for i in range(len(text)):\n        text[i] = pattern.sub(r'',text[i])\n    return text\n\ntext12 = remove_numbers(text1)\n\n## Works perfectly since all currency and special characters will be removed afterwards. ","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:51.402197Z","iopub.execute_input":"2025-08-03T06:58:51.402826Z","iopub.status.idle":"2025-08-03T06:58:51.811786Z","shell.execute_reply.started":"2025-08-03T06:58:51.402803Z","shell.execute_reply":"2025-08-03T06:58:51.810980Z"}},"outputs":[],"execution_count":36},{"cell_type":"markdown","source":"### Removing urls","metadata":{}},{"cell_type":"code","source":"df_total['body'] = text12\nx = df_total.drop(columns = ['rule_violation'])\ny = df_total['rule_violation']\n\nx_train_pre,x_test_pre,y_train,y_test = train_test_split(x,y,train_size = 0.75, random_state = 42)\n\n\ntraining_text = x_train_pre['body'].to_list()\ntesting_text = x_test_pre['body'].to_list()\n\n\nx_train_pre = x_train_pre.drop(columns = ['body'])\nx_test_pre = x_test_pre.drop(columns = ['body'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:53.689582Z","iopub.execute_input":"2025-08-03T06:58:53.690204Z","iopub.status.idle":"2025-08-03T06:58:53.702147Z","shell.execute_reply.started":"2025-08-03T06:58:53.690178Z","shell.execute_reply":"2025-08-03T06:58:53.701224Z"}},"outputs":[],"execution_count":37},{"cell_type":"code","source":"lemmatizer = WordNetLemmatizer()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:55.201661Z","iopub.execute_input":"2025-08-03T06:58:55.202440Z","iopub.status.idle":"2025-08-03T06:58:55.206102Z","shell.execute_reply.started":"2025-08-03T06:58:55.202412Z","shell.execute_reply":"2025-08-03T06:58:55.205184Z"}},"outputs":[],"execution_count":38},{"cell_type":"code","source":"##Training data cleaning\n\ncleaned_text = []\npreprocessed_training_text = []\nfor i in range(len(x_train_pre)):\n    text1 = re.sub('[^a-zA-Z]',' ',training_text[i])\n    text1 = text1.lower()\n    text1 = [lemmatizer.lemmatize(word) for word in text1 if word not in combined_stopwords]\n    cleaned_text = ''.join(text1)\n    preprocessed_training_text.append(cleaned_text)\n\n##Testing data cleaning\n\ncleaned_text1 = []\npreprocessed_testing_text = []\nfor i in range(len(x_test_pre)):\n    text1 = re.sub('[^a-zA-Z]',' ',testing_text[i])\n    text1 = text1.lower()\n    text1 = [lemmatizer.lemmatize(word) for word in text1 if word not in combined_stopwords]\n    cleaned_text1 = ''.join(text1)\n    preprocessed_testing_text.append(cleaned_text1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:55.389693Z","iopub.execute_input":"2025-08-03T06:58:55.390331Z","iopub.status.idle":"2025-08-03T06:58:58.007438Z","shell.execute_reply.started":"2025-08-03T06:58:55.390306Z","shell.execute_reply":"2025-08-03T06:58:58.006824Z"}},"outputs":[],"execution_count":39},{"cell_type":"code","source":"type(preprocessed_training_text)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:58.008378Z","iopub.execute_input":"2025-08-03T06:58:58.008640Z","iopub.status.idle":"2025-08-03T06:58:58.013822Z","shell.execute_reply.started":"2025-08-03T06:58:58.008621Z","shell.execute_reply":"2025-08-03T06:58:58.012844Z"}},"outputs":[{"execution_count":40,"output_type":"execute_result","data":{"text/plain":"list"},"metadata":{}}],"execution_count":40},{"cell_type":"code","source":"token = Tokenizer(num_words = 5000, oov_token='<OOV>')\n##training text tokenization and padding\n\ntoken.fit_on_texts(preprocessed_training_text)\nmax_length = max(len(i.split()) for i in preprocessed_training_text)\ntraining_sequence = token.texts_to_sequences(preprocessed_training_text)\nx_train = pad_sequences(training_sequence, maxlen=max_length, padding='post')\n\n\n##Testing Text tokenization and padding\n\ntesting_sequence = token.texts_to_sequences(preprocessed_testing_text)\nx_test = pad_sequences(testing_sequence, maxlen=max_length, padding='post')\nmax_length","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:58:58.014711Z","iopub.execute_input":"2025-08-03T06:58:58.014932Z","iopub.status.idle":"2025-08-03T06:58:58.275705Z","shell.execute_reply.started":"2025-08-03T06:58:58.014912Z","shell.execute_reply":"2025-08-03T06:58:58.274996Z"}},"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"83"},"metadata":{}}],"execution_count":41},{"cell_type":"markdown","source":"### ROC AUC curve\n","metadata":{}},{"cell_type":"code","source":"## Feature dataset input preprocessing\nfeature_input = Input(shape=(5,), name = 'other_feature')\ny = Dense(64, activation='relu')(feature_input)\ny = BatchNormalization()(y)\ny = Dropout(0.3)(y)\ny = Dense(64, activation='relu')(y)\n\n## Text input preprocessing\ntext_input = Input(shape=(83,), name='text_input')\nembedding = Embedding(input_dim = 5000, output_dim = 128)(text_input)\nx1 = Bidirectional(LSTM(128, return_sequences=True))(embedding)\n\n# Multi-Head Attention for better context\nx2 = MultiHeadAttention(num_heads=4, key_dim=64)(x1, x1)\n\n# Combine Attention output with LSTM via Residual Connection\nx2 = Add()([x1, x2])  # residual connection\n\n# Pooling to flatten sequence\nx = GlobalAveragePooling1D()(x2)\n\n\ncombined = Concatenate()([x,y])\nrnn1 = Dense(128, activation='relu')(combined)\nrnn2 = Dense(64, activation='relu')(rnn1)\ndense3 = Dense(32, activation='relu')(rnn2)\noutput = Dense(1, activation='sigmoid')(dense3)\n\nmodel = Model(inputs=[text_input, feature_input], outputs=output)\nadam = Adam(learning_rate = 0.001)\nmodel.compile(optimizer=adam, loss='binary_crossentropy', metrics=[AUC(curve='ROC', name='roc_auc')])\n## This architecture achieved loss: 0.4561 - roc_auc: 0.8632 - val_loss: 0.5426 - val_roc_auc: 0.8094 after 20 iterations.","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:59:00.933566Z","iopub.execute_input":"2025-08-03T06:59:00.934464Z","iopub.status.idle":"2025-08-03T06:59:01.066891Z","shell.execute_reply.started":"2025-08-03T06:59:00.934438Z","shell.execute_reply":"2025-08-03T06:59:01.066134Z"}},"outputs":[],"execution_count":42},{"cell_type":"code","source":"type(y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:59:02.137381Z","iopub.execute_input":"2025-08-03T06:59:02.138113Z","iopub.status.idle":"2025-08-03T06:59:02.142702Z","shell.execute_reply.started":"2025-08-03T06:59:02.138087Z","shell.execute_reply":"2025-08-03T06:59:02.141753Z"}},"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"pandas.core.series.Series"},"metadata":{}}],"execution_count":43},{"cell_type":"code","source":"\nhistory = model.fit(\n    {'text_input': x_train, 'other_feature': x_train_pre},\n    y_train,\n    epochs=25, validation_data=(\n        {'text_input': x_test, 'other_feature': x_test_pre},\n        y_test\n    ),\n    batch_size=64,verbose = 1,\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:59:02.654661Z","iopub.execute_input":"2025-08-03T06:59:02.654963Z","iopub.status.idle":"2025-08-03T07:00:26.979441Z","shell.execute_reply.started":"2025-08-03T06:59:02.654915Z","shell.execute_reply":"2025-08-03T07:00:26.978848Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 31ms/step - loss: 0.6880 - roc_auc: 0.5449 - val_loss: 0.6080 - val_roc_auc: 0.7549\nEpoch 2/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.5160 - roc_auc: 0.8224 - val_loss: 0.5182 - val_roc_auc: 0.8258\nEpoch 3/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.4323 - roc_auc: 0.8774 - val_loss: 0.5239 - val_roc_auc: 0.8212\nEpoch 4/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.4151 - roc_auc: 0.8864 - val_loss: 0.4984 - val_roc_auc: 0.8322\nEpoch 5/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3963 - roc_auc: 0.8969 - val_loss: 0.5046 - val_roc_auc: 0.8272\nEpoch 6/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3879 - roc_auc: 0.9000 - val_loss: 0.5256 - val_roc_auc: 0.8233\nEpoch 7/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3665 - roc_auc: 0.9070 - val_loss: 0.5412 - val_roc_auc: 0.8184\nEpoch 8/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3742 - roc_auc: 0.9067 - val_loss: 0.5319 - val_roc_auc: 0.8151\nEpoch 9/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3699 - roc_auc: 0.9101 - val_loss: 0.5709 - val_roc_auc: 0.8134\nEpoch 10/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3547 - roc_auc: 0.9162 - val_loss: 0.5787 - val_roc_auc: 0.8107\nEpoch 11/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 30ms/step - loss: 0.3465 - roc_auc: 0.9182 - val_loss: 0.5624 - val_roc_auc: 0.8081\nEpoch 12/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3488 - roc_auc: 0.9188 - val_loss: 0.6103 - val_roc_auc: 0.8037\nEpoch 13/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3405 - roc_auc: 0.9232 - val_loss: 0.6085 - val_roc_auc: 0.8000\nEpoch 14/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 0.3480 - roc_auc: 0.9179 - val_loss: 0.6601 - val_roc_auc: 0.7997\nEpoch 15/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3267 - roc_auc: 0.9285 - val_loss: 0.7069 - val_roc_auc: 0.7942\nEpoch 16/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 0.3439 - roc_auc: 0.9188 - val_loss: 0.6354 - val_roc_auc: 0.7976\nEpoch 17/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 26ms/step - loss: 0.3322 - roc_auc: 0.9250 - val_loss: 0.6971 - val_roc_auc: 0.7924\nEpoch 18/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3360 - roc_auc: 0.9244 - val_loss: 0.6407 - val_roc_auc: 0.7956\nEpoch 19/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3426 - roc_auc: 0.9222 - val_loss: 0.7509 - val_roc_auc: 0.7921\nEpoch 20/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3428 - roc_auc: 0.9193 - val_loss: 0.7262 - val_roc_auc: 0.7906\nEpoch 21/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3435 - roc_auc: 0.9197 - val_loss: 0.8603 - val_roc_auc: 0.7920\nEpoch 22/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3325 - roc_auc: 0.9252 - val_loss: 0.8261 - val_roc_auc: 0.7927\nEpoch 23/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3355 - roc_auc: 0.9235 - val_loss: 0.7449 - val_roc_auc: 0.7920\nEpoch 24/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3236 - roc_auc: 0.9291 - val_loss: 0.8435 - val_roc_auc: 0.7870\nEpoch 25/25\n\u001b[1m119/119\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 25ms/step - loss: 0.3283 - roc_auc: 0.9268 - val_loss: 0.8196 - val_roc_auc: 0.7896\n","output_type":"stream"}],"execution_count":44},{"cell_type":"markdown","source":"### This architecture achieved  loss: 0.3283 - roc_auc: 0.9268 - val_loss: 0.8196 - val_roc_auc: 0.7896\n### we can train our model and use out testing data on it. ","metadata":{}},{"cell_type":"code","source":"y_pred = model.predict({'text_input': x_test, 'other_feature': x_test_pre})\nfrom sklearn.metrics import roc_auc_score\nroc_auc_test = roc_auc_score(y_test, y_pred)\nprint(f\"Test ROC-AUC: {roc_auc_test:.4f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-02T16:49:39.144306Z","iopub.execute_input":"2025-08-02T16:49:39.144677Z","iopub.status.idle":"2025-08-02T16:49:40.874013Z","shell.execute_reply.started":"2025-08-02T16:49:39.144648Z","shell.execute_reply":"2025-08-02T16:49:40.873378Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def training_data_prep(dataframe):\n    df = dataframe['rule'].str.split(',',expand=True)\n    df.fillna('0',inplace=True)\n    df.columns = ['rule 1','rule 2','rule 3','rule 4']\n    ## till here it works perfectly\n    df['rule 2'] = df['rule 2'].apply(lambda x : 1 if 'referral links' in str(x).lower() else 0)\n    df = df.rename(columns = {'rule 2':'referral link allowed'})\n    #column 0 (legal_advice)\n    df['legal_advice_allowed'] = df['rule 1'].apply(lambda x: 0 if 'legal' in str(x).lower() else 1)\n    #column 1\n    df['rule 4'] = df['rule 4'].apply(lambda x: 0 if 'promotional' in str(x).lower() else 1)\n    df = df.rename(columns = {'rule 4':'Promotions allowed'})\n    ##column 1: advertising\n    df['rule 3'] = df['rule 3'].apply(lambda x: 0 if 'advertising' in str(x).lower() else 1)\n    df = df.rename(columns = {'rule 3':'Advertising allowed'})\n    ## Dealing with  spam part using new created dataframe\n    df_1 = df['rule 1'].str.split(':',expand=True)\n    df = df.drop(columns = ['rule 1'])\n\n    df_1.columns = ['Advert','spam']\n    df_1 = df_1.drop(columns = ['Advert'])\n    \n    df_1['spam allowed'] = df_1['spam'].apply(lambda x: 0 if 'spam' in str(x).lower() else 1)\n    df['spam allowed'] = df_1['spam allowed']\n    ## Double checked with  original dataframe, works fine till here.\n\n    for i in df.columns:\n        dataframe[i] = df[i]\n\n    ##making this part custom since testing part doesn't have rule_violation part\n        \n    df_original = dataframe[['body', 'rule_violation','referral link allowed', 'Advertising allowed',\n           'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\n    \n    df_p1 = dataframe[['positive_example_1','rule_violation','referral link allowed', 'Advertising allowed',\n               'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\n    df_p1.loc[:,'rule_violation'] = 0\n    df_p1 = df_p1.rename(columns = {'positive_example_1':'body'})\n        \n    df_p2 = dataframe[['positive_example_2','rule_violation','referral link allowed', 'Advertising allowed',\n               'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\n    df_p2.loc[:,'rule_violation'] = 0\n    df_p2 = df_p2.rename(columns = {'positive_example_2':'body'})\n        \n    df_n1 = dataframe[['negative_example_1','rule_violation','referral link allowed', 'Advertising allowed',\n               'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\n    df_n1.loc[:,'rule_violation'] = 1\n    df_n1 = df_n1.rename(columns = {'negative_example_1':'body'})\n        \n    df_n2 = dataframe[['negative_example_2','rule_violation','referral link allowed', 'Advertising allowed',\n               'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]\n    df_n2.loc[:,'rule_violation'] = 1\n    df_n2 = df_n2.rename(columns = {'negative_example_2':'body'})\n    \n    df_total = pd.concat([df_original,df_p1,df_p2,df_n1,df_n2], axis = 0,ignore_index=True)\n\n    text_file = df_total['body'].to_list()\n    \n    pattern = re.compile('https?:\\/\\/\\S+|www\\.\\S+|Https?:\\/\\/\\S+|\\S+\\.com\\S+|\\S+\\.com|\\[.*?\\]|\\S+ \\. com.*')   ## Removing URLs\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n    \n    pattern = re.compile('<.*?>')       ##Removing HTML rags\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i]) \n    \n    pattern = re.compile('#\\S+|@\\S+|\\S+\\@\\S+|\\S+@')             ## Removing Emails and Hashtags\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])            ### Removing username and subreddit mentions\n    \n    pattern = re.compile('u\\/\\S+|r\\/\\S+')\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n        \n    pattern = re.compile(\"[\"\n                           u\"\\U0001F600-\\U0001F64F\"  # emoticons\n                           u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n                           u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n                           u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           u\"\\U00002702-\\U000027B0\"\n                           u\"\\U000024C2-\\U0001F251\"\n                           \"]+\", flags=re.UNICODE)\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n\n    pattern = re.compile('\\d|\\\\n')             ##Removing Numbers & \\n spaces\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n\n\n    ## Works perfectly\n\n    x = df_total.drop(columns = ['rule_violation'])\n    y = df_total['rule_violation']\n\n    x = x.drop(columns = ['body'])\n    \n    lemmatizer = WordNetLemmatizer()\n\n    cleaned_text = []\n    preprocessed_training_text = []\n    for i in range(len(x)):\n        text1 = re.sub('[^a-zA-Z]',' ',text_file[i])\n        text1 = text1.lower()\n        text1 = [lemmatizer.lemmatize(word) for word in text1 if word not in combined_stopwords]\n        cleaned_text = ''.join(text1)\n        preprocessed_training_text.append(cleaned_text)\n    \n\n    return x,y,preprocessed_training_text\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:52:50.273145Z","iopub.execute_input":"2025-08-03T06:52:50.273626Z","iopub.status.idle":"2025-08-03T06:52:50.287258Z","shell.execute_reply.started":"2025-08-03T06:52:50.273601Z","shell.execute_reply":"2025-08-03T06:52:50.286360Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"def testing_data_prep(dataframe):\n    df = dataframe['rule'].str.split(',',expand=True)\n    df.fillna('0',inplace=True)\n    df.columns = ['rule 1','rule 2','rule 3','rule 4']\n    ## till here it works perfectly\n    df['rule 2'] = df['rule 2'].apply(lambda x : 1 if 'referral links' in str(x).lower() else 0)\n    df = df.rename(columns = {'rule 2':'referral link allowed'})\n    #column 0 (legal_advice)\n    df['legal_advice_allowed'] = df['rule 1'].apply(lambda x: 0 if 'legal' in str(x).lower() else 1)\n    #column 1\n    df['rule 4'] = df['rule 4'].apply(lambda x: 0 if 'promotional' in str(x).lower() else 1)\n    df = df.rename(columns = {'rule 4':'Promotions allowed'})\n    ##column 1: advertising\n    df['rule 3'] = df['rule 3'].apply(lambda x: 0 if 'advertising' in str(x).lower() else 1)\n    df = df.rename(columns = {'rule 3':'Advertising allowed'})\n    ## Dealing with  spam part using new created dataframe\n    df_1 = df['rule 1'].str.split(':',expand=True)\n    df = df.drop(columns = ['rule 1'])\n\n    df_1.columns = ['Advert','spam']\n    df_1 = df_1.drop(columns = ['Advert'])\n    \n    df_1['spam allowed'] = df_1['spam'].apply(lambda x: 0 if 'spam' in str(x).lower() else 1)\n    df['spam allowed'] = df_1['spam allowed']\n    ## Double checked with  original dataframe, works fine till here.\n\n    for i in df.columns:\n        dataframe[i] = df[i]\n    \n    df_total = dataframe[['body','referral link allowed', 'Advertising allowed',\n           'Promotions allowed', 'legal_advice_allowed', 'spam allowed']]        \n\n    ## Till here, everything works fine as well, tested properly.\n    \n    text_file = df_total['body'].to_list()\n    \n    pattern = re.compile('https?:\\/\\/\\S+|www\\.\\S+|Https?:\\/\\/\\S+|\\S+\\.com\\S+|\\S+\\.com|\\[.*?\\]|\\S+ \\. com.*')   ## Removing URLs\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n    \n    pattern = re.compile('<.*?>')       ##Removing HTML rags\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i]) \n    \n    pattern = re.compile('#\\S+|@\\S+|\\S+\\@\\S+|\\S+@')             ## Removing Emails and Hashtags\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])            ### Removing username and subreddit mentions\n    \n    pattern = re.compile('u\\/\\S+|r\\/\\S+')\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n        \n    pattern = re.compile(\"[\"\n                           u\"\\U0001F600-\\U0001F64F\"  # emoticons\n                           u\"\\U0001F300-\\U0001F5FF\"  # symbols & pictographs\n                           u\"\\U0001F680-\\U0001F6FF\"  # transport & map symbols\n                           u\"\\U0001F1E0-\\U0001F1FF\"  # flags (iOS)\n                           u\"\\U00002702-\\U000027B0\"\n                           u\"\\U000024C2-\\U0001F251\"\n                           \"]+\", flags=re.UNICODE)\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n\n    pattern = re.compile('\\d|\\\\n')             ##Removing Numbers & \\n spaces\n    for i in range(len(text_file)):\n        text_file[i] = pattern.sub(r'',text_file[i])\n\n    lemmatizer = WordNetLemmatizer()\n\n    cleaned_text = []\n    preprocessed_testing_text = []\n    for i in range(len(df_total)):\n        text1 = re.sub('[^a-zA-Z]',' ',text_file[i])\n        text1 = text1.lower()\n        text1 = [lemmatizer.lemmatize(word) for word in text1 if word not in combined_stopwords]\n        cleaned_text = ''.join(text1)\n        preprocessed_testing_text.append(cleaned_text)\n    \n    ##Works perfectly fine till now.\n\n    df_total = df_total.drop(columns = ['body'])\n    \n    return df_total,preprocessed_testing_text","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:52:52.169729Z","iopub.execute_input":"2025-08-03T06:52:52.170371Z","iopub.status.idle":"2025-08-03T06:52:52.184491Z","shell.execute_reply.started":"2025-08-03T06:52:52.170345Z","shell.execute_reply":"2025-08-03T06:52:52.183553Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"x_features,y_target, preprocessed_training_text = training_data_prep(df_train)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:52:54.182733Z","iopub.execute_input":"2025-08-03T06:52:54.183296Z","iopub.status.idle":"2025-08-03T06:53:00.147004Z","shell.execute_reply.started":"2025-08-03T06:52:54.183270Z","shell.execute_reply":"2025-08-03T06:53:00.146429Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"x_test_features,preprocessed_testing_text = testing_data_prep(df_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:55:49.174931Z","iopub.execute_input":"2025-08-03T06:55:49.175700Z","iopub.status.idle":"2025-08-03T06:55:49.191514Z","shell.execute_reply.started":"2025-08-03T06:55:49.175675Z","shell.execute_reply":"2025-08-03T06:55:49.190760Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"token = Tokenizer(num_words = 5000, oov_token='<OOV>')\n##training text tokenization and padding\n\ntoken.fit_on_texts(preprocessed_training_text)\nmax_length = max(len(i.split()) for i in preprocessed_training_text)\ntraining_sequence = token.texts_to_sequences(preprocessed_training_text)\nx_train = pad_sequences(training_sequence, maxlen=max_length, padding='post')\n    \n    ##Testing Text tokenization and padding\n    \ntesting_sequence = token.texts_to_sequences(preprocessed_testing_text)\nx_test = pad_sequences(testing_sequence, maxlen=max_length, padding='post')\n\n    # TENSORFLOW ARCHITECTURE HERE\n    ## Feature dataset input preprocessing\nfeature_input = Input(shape=(5,), name = 'other_feature')\ny = Dense(64, activation='relu')(feature_input)\ny = BatchNormalization()(y)\ny = Dropout(0.3)(y)\ny = Dense(64, activation='relu')(y)\n    \n    ## Text input preprocessing\ntext_input = Input(shape=(83,), name='text_input')\nembedding = Embedding(input_dim = 5000, output_dim = 128)(text_input)\nx1 = Bidirectional(LSTM(128, return_sequences=True))(embedding)\n    \n    # Multi-Head Attention for better context\nx2 = MultiHeadAttention(num_heads=4, key_dim=64)(x1, x1)\n    \n    # Combine Attention output with LSTM via Residual Connection\nx2 = Add()([x1, x2])  # residual connection\n    \n    # Pooling to flatten sequence\nx = GlobalAveragePooling1D()(x2)\n    \n    \ncombined = Concatenate()([x,y])\nrnn1 = Dense(128, activation='relu')(combined)\nrnn2 = Dense(64, activation='relu')(rnn1)\ndense3 = Dense(32, activation='relu')(rnn2)\noutput = Dense(1, activation='sigmoid')(dense3)\n    \nmodel = Model(inputs=[text_input, feature_input], outputs=output)\nadam = Adam(learning_rate = 0.001)\nmodel.compile(optimizer=adam, loss='binary_crossentropy', metrics=[AUC(curve='ROC', name='roc_auc')])  \n\nhistory = model.fit(\n    {'text_input': x_train, 'other_feature': x_features},\n    y_target,\n    epochs=25, batch_size=64, verbose = 1,\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:53:00.148217Z","iopub.execute_input":"2025-08-03T06:53:00.148513Z","iopub.status.idle":"2025-08-03T06:54:41.124375Z","shell.execute_reply.started":"2025-08-03T06:53:00.148486Z","shell.execute_reply":"2025-08-03T06:54:41.123588Z"}},"outputs":[{"name":"stderr","text":"I0000 00:00:1754203980.607333      36 gpu_device.cc:2022] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 15513 MB memory:  -> device: 0, name: Tesla P100-PCIE-16GB, pci bus id: 0000:00:04.0, compute capability: 6.0\n","output_type":"stream"},{"name":"stdout","text":"Epoch 1/25\n","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1754203990.037040     106 cuda_dnn.cc:529] Loaded cuDNN version 90300\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 23ms/step - loss: 0.6615 - roc_auc: 0.6262\nEpoch 2/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.4674 - roc_auc: 0.8532\nEpoch 3/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.4223 - roc_auc: 0.8814\nEpoch 4/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.4159 - roc_auc: 0.8823\nEpoch 5/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.4089 - roc_auc: 0.8854\nEpoch 6/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3951 - roc_auc: 0.8894\nEpoch 7/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3852 - roc_auc: 0.8946\nEpoch 8/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3783 - roc_auc: 0.8990\nEpoch 9/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3713 - roc_auc: 0.9027\nEpoch 10/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3667 - roc_auc: 0.9055\nEpoch 11/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3762 - roc_auc: 0.9000\nEpoch 12/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3768 - roc_auc: 0.9008\nEpoch 13/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3747 - roc_auc: 0.8986\nEpoch 14/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3553 - roc_auc: 0.9097\nEpoch 15/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3611 - roc_auc: 0.9059\nEpoch 16/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3631 - roc_auc: 0.9046\nEpoch 17/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3706 - roc_auc: 0.9023\nEpoch 18/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3585 - roc_auc: 0.9066\nEpoch 19/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3615 - roc_auc: 0.9055\nEpoch 20/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3737 - roc_auc: 0.9015\nEpoch 21/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3676 - roc_auc: 0.9035\nEpoch 22/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3600 - roc_auc: 0.9061\nEpoch 23/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3688 - roc_auc: 0.9027\nEpoch 24/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3629 - roc_auc: 0.9065\nEpoch 25/25\n\u001b[1m159/159\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 22ms/step - loss: 0.3694 - roc_auc: 0.9009\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"y_pred = model.predict({'text_input': x_test, 'other_feature': x_test_features})\nfrom sklearn.metrics import roc_auc_score\n#roc_auc_test = roc_auc_score(y_test, y_pred)\n#print(f\"Test ROC-AUC: {roc_auc_test:.4f}\")\n\nprint(y_pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:56:03.177344Z","iopub.execute_input":"2025-08-03T06:56:03.177604Z","iopub.status.idle":"2025-08-03T06:56:03.671332Z","shell.execute_reply.started":"2025-08-03T06:56:03.177586Z","shell.execute_reply":"2025-08-03T06:56:03.670625Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 432ms/step\n[[0.12661245]\n [0.7092084 ]\n [0.13755953]\n [0.8428936 ]\n [0.1344395 ]\n [0.75404006]\n [0.9715611 ]\n [0.554497  ]\n [0.8305473 ]\n [0.14269221]]\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"subsmissions = pd.read_csv('/kaggle/input/jigsaw-agile-community-rules/sample_submission.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:56:52.183476Z","iopub.execute_input":"2025-08-03T06:56:52.184099Z","iopub.status.idle":"2025-08-03T06:56:52.192722Z","shell.execute_reply.started":"2025-08-03T06:56:52.184078Z","shell.execute_reply":"2025-08-03T06:56:52.192147Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"subsmissions['proba'] = y_pred","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:57:50.816199Z","iopub.execute_input":"2025-08-03T06:57:50.816834Z","iopub.status.idle":"2025-08-03T06:57:50.821087Z","shell.execute_reply.started":"2025-08-03T06:57:50.816811Z","shell.execute_reply":"2025-08-03T06:57:50.820219Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"subsmissions.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-03T06:57:59.493365Z","iopub.execute_input":"2025-08-03T06:57:59.494263Z","iopub.status.idle":"2025-08-03T06:57:59.502337Z","shell.execute_reply.started":"2025-08-03T06:57:59.494238Z","shell.execute_reply":"2025-08-03T06:57:59.501595Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"   row_id  rule_violation     proba\n0    2029             0.5  0.126612\n1    2030             0.5  0.709208\n2    2031             0.5  0.137560\n3    2032             0.5  0.842894\n4    2033             0.5  0.134439","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>row_id</th>\n      <th>rule_violation</th>\n      <th>proba</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2029</td>\n      <td>0.5</td>\n      <td>0.126612</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2030</td>\n      <td>0.5</td>\n      <td>0.709208</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2031</td>\n      <td>0.5</td>\n      <td>0.137560</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2032</td>\n      <td>0.5</td>\n      <td>0.842894</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2033</td>\n      <td>0.5</td>\n      <td>0.134439</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}